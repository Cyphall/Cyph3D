find_package(CMakeRC CONFIG REQUIRED)

function(target_shaders TARGET RESOURCE_NAME PREFIX)
	find_program(GLSLANG_EXECUTABLE glslang REQUIRED)

	set(SHADER_SPIRV_FILES)

	set(CMAKE_OUTPUT_BASE_PATH "CMakeFiles/${TARGET}.dir")

	foreach (SHADER_SOURCE_FILE_PATH IN LISTS ARGN)
		cmake_path(ABSOLUTE_PATH SHADER_SOURCE_FILE_PATH NORMALIZE OUTPUT_VARIABLE SHADER_SOURCE_FILE_PATH_ABS)
		cmake_path(NATIVE_PATH SHADER_SOURCE_FILE_PATH SHADER_SOURCE_FILE_PATH_NATIVE)
		cmake_path(NATIVE_PATH SHADER_SOURCE_FILE_PATH_ABS SHADER_SOURCE_FILE_PATH_ABS_NATIVE)

		set(SHADER_SPIRV_FILE_PATH "${CMAKE_OUTPUT_BASE_PATH}/${SHADER_SOURCE_FILE_PATH}.spv")
		cmake_path(ABSOLUTE_PATH SHADER_SPIRV_FILE_PATH BASE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} NORMALIZE OUTPUT_VARIABLE SHADER_SPIRV_FILE_PATH_ABS)
		cmake_path(NATIVE_PATH SHADER_SPIRV_FILE_PATH SHADER_SPIRV_FILE_PATH_NATIVE)
		cmake_path(NATIVE_PATH SHADER_SPIRV_FILE_PATH_ABS SHADER_SPIRV_FILE_PATH_ABS_NATIVE)

		set(SHADER_DEPFILE_FILE_PATH "${CMAKE_OUTPUT_BASE_PATH}/${SHADER_SOURCE_FILE_PATH}.d")
		cmake_path(ABSOLUTE_PATH SHADER_DEPFILE_FILE_PATH BASE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} NORMALIZE OUTPUT_VARIABLE SHADER_DEPFILE_FILE_PATH_ABS)
		cmake_path(NATIVE_PATH SHADER_DEPFILE_FILE_PATH SHADER_DEPFILE_FILE_PATH_NATIVE)
		cmake_path(NATIVE_PATH SHADER_DEPFILE_FILE_PATH_ABS SHADER_DEPFILE_FILE_PATH_ABS_NATIVE)

		add_custom_command(
			OUTPUT "${SHADER_SPIRV_FILE_PATH}"
			COMMAND "${GLSLANG_EXECUTABLE}" "${SHADER_SOURCE_FILE_PATH_ABS_NATIVE}" -o "${SHADER_SPIRV_FILE_PATH_ABS_NATIVE}" --depfile "${SHADER_DEPFILE_FILE_PATH_ABS_NATIVE}" --target-env vulkan1.3 --quiet $<$<CONFIG:Debug,RelWithDebInfo>:-g>
			DEPENDS "${SHADER_SOURCE_FILE_PATH}"
			BYPRODUCTS "${SHADER_DEPFILE_FILE_PATH}"
			COMMENT "Building GLSL object ${SHADER_SPIRV_FILE_PATH_NATIVE}"
			DEPFILE "${SHADER_DEPFILE_FILE_PATH}"
			VERBATIM
			COMMAND_EXPAND_LISTS
		)

		list(APPEND SHADER_SPIRV_FILES "${SHADER_SPIRV_FILE_PATH_ABS}")
	endforeach ()

	cmrc_add_resource_library(${TARGET}_${RESOURCE_NAME}
		NAMESPACE ${RESOURCE_NAME}
		WHENCE "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_OUTPUT_BASE_PATH}/${PREFIX}"
		${SHADER_SPIRV_FILES}
	)
	target_link_libraries(${TARGET} PRIVATE ${TARGET}_${RESOURCE_NAME})
endfunction()